<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="30320" started-at="2020-08-08T21:09:14 IST" finished-at="2020-08-08T21:09:45 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="30320" started-at="2020-08-08T21:09:14 IST" finished-at="2020-08-08T21:09:45 IST">
      <class name="emicalculator.Test.NegativeTestClass">
        <test-method status="PASS" signature="setup_NegativeTest()[pri:0, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="setup_NegativeTest" is-config="true" duration-ms="11345" started-at="2020-08-08T21:09:15 IST" finished-at="2020-08-08T21:09:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup_NegativeTest -->
        <test-method status="PASS" signature="getTitle_NegativeTest()[pri:0, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="getTitle_NegativeTest" duration-ms="500" started-at="2020-08-08T21:09:26 IST" finished-at="2020-08-08T21:09:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitle_NegativeTest -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="flush" is-config="true" duration-ms="580" started-at="2020-08-08T21:09:27 IST" finished-at="2020-08-08T21:09:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTitle_NegativeTest status=SUCCESS method=NegativeTestClass.getTitle_NegativeTest()[pri:0, instance:emicalculator.Test.NegativeTestClass@2ca47471] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="verifybutton_NegativeTest()[pri:1, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="verifybutton_NegativeTest" duration-ms="87" started-at="2020-08-08T21:09:28 IST" finished-at="2020-08-08T21:09:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifybutton_NegativeTest -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="flush" is-config="true" duration-ms="357" started-at="2020-08-08T21:09:28 IST" finished-at="2020-08-08T21:09:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifybutton_NegativeTest status=SUCCESS method=NegativeTestClass.verifybutton_NegativeTest()[pri:1, instance:emicalculator.Test.NegativeTestClass@2ca47471] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="selectLoanType_NegativeTest()[pri:2, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="selectLoanType_NegativeTest" duration-ms="3166" started-at="2020-08-08T21:09:28 IST" finished-at="2020-08-08T21:09:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectLoanType_NegativeTest -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="flush" is-config="true" duration-ms="123" started-at="2020-08-08T21:09:31 IST" finished-at="2020-08-08T21:09:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectLoanType_NegativeTest status=SUCCESS method=NegativeTestClass.selectLoanType_NegativeTest()[pri:2, instance:emicalculator.Test.NegativeTestClass@2ca47471] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="selectamount_NegativeTest()[pri:3, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="selectamount_NegativeTest" duration-ms="5053" started-at="2020-08-08T21:09:31 IST" finished-at="2020-08-08T21:09:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectamount_NegativeTest -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="flush" is-config="true" duration-ms="106" started-at="2020-08-08T21:09:36 IST" finished-at="2020-08-08T21:09:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectamount_NegativeTest status=SUCCESS method=NegativeTestClass.selectamount_NegativeTest()[pri:3, instance:emicalculator.Test.NegativeTestClass@2ca47471] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="FAIL" signature="selectInterestRate_NegativeTest()[pri:4, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="selectInterestRate_NegativeTest" duration-ms="3504" started-at="2020-08-08T21:09:37 IST" finished-at="2020-08-08T21:09:40 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0] but found [null]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEqualsImpl(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at emicalculator.Test.NegativeTestClass.selectInterestRate_NegativeTest(NegativeTestClass.java:111)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectInterestRate_NegativeTest -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="flush" is-config="true" duration-ms="63" started-at="2020-08-08T21:09:40 IST" finished-at="2020-08-08T21:09:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectInterestRate_NegativeTest status=FAILURE method=NegativeTestClass.selectInterestRate_NegativeTest()[pri:4, instance:emicalculator.Test.NegativeTestClass@2ca47471] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="selectTenure_NegativeTest()[pri:5, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="selectTenure_NegativeTest" duration-ms="3334" started-at="2020-08-08T21:09:40 IST" finished-at="2020-08-08T21:09:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTenure_NegativeTest -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="flush" is-config="true" duration-ms="45" started-at="2020-08-08T21:09:43 IST" finished-at="2020-08-08T21:09:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectTenure_NegativeTest status=SUCCESS method=NegativeTestClass.selectTenure_NegativeTest()[pri:5, instance:emicalculator.Test.NegativeTestClass@2ca47471] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="screenshot_NegativeTest()[pri:6, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="screenshot_NegativeTest" duration-ms="437" started-at="2020-08-08T21:09:44 IST" finished-at="2020-08-08T21:09:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot_NegativeTest -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="flush" is-config="true" duration-ms="35" started-at="2020-08-08T21:09:44 IST" finished-at="2020-08-08T21:09:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=screenshot_NegativeTest status=SUCCESS method=NegativeTestClass.screenshot_NegativeTest()[pri:6, instance:emicalculator.Test.NegativeTestClass@2ca47471] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="closeDriver_NegativeTest()[pri:0, instance:emicalculator.Test.NegativeTestClass@2ca47471]" name="closeDriver_NegativeTest" is-config="true" duration-ms="777" started-at="2020-08-08T21:09:44 IST" finished-at="2020-08-08T21:09:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver_NegativeTest -->
      </class> <!-- emicalculator.Test.NegativeTestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
